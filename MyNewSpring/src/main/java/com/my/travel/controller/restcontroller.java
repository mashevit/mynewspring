package com.my.travel.controller;

import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.my.travel.components.ToAndApp;
import com.my.travel.dao.CityRepository;
import com.my.travel.dao.PicRepository;
import com.my.travel.dao.SightseeingRepository;
import com.my.travel.dao.TripRepository;
import com.my.travel.dao.TripSightseeingRepository;
import com.my.travel.model2.Pic;
import com.my.travel.model2.TripSightseeing;

//import main.java.com.my.model.Dish;
@CrossOrigin
@RestController
@RequestMapping(value = "/rest")
public class restcontroller {
	
	
	
/*	@Autowired // Which is auto-generated by Spring, we will use it to handle the data
	private TripRepository tripRepository;
	
	@Autowired // Which is auto-generated by Spring, we will use it to handle the data
	private SightseeingRepository sightseeingRepository;

	@Autowired // Which is auto-generated by Spring, we will use it to handle the data
	private CityRepository cityRepository;
*/
	@Autowired // Which is auto-generated by Spring, we will use it to handle the data
	private TripSightseeingRepository tripSightseeingRepository;
	
	@Autowired // Which is auto-generated by Spring, we will use it to handle the data
	private PicRepository picRepository;

	@Autowired // Which is auto-generated by Spring, we will use it to handle the data
	private CityRepository cityRepository;
	
	
	@GetMapping("/trippic/{id}")
	public List<ToAndApp> retrievefortrip(@PathVariable int id) {
		
		System.out.println("  trippic 	");
		List<TripSightseeing> tripSightseeings=tripSightseeingRepository.findAllByTripCityIdcities(id);
		String globalc=cityRepository.findById(id).get().getCityName();
		List<ToAndApp> tmp=new ArrayList<ToAndApp>();
		tripSightseeings.forEach(a->{
			List<Pic> pictmp= picRepository.findAllBytripSightseeingIdtripSightseeingIn(a.getIdtripSightseeing());
			ToAndApp andApp=new ToAndApp();
			andApp.setSightname(a.getSightseeing().getSightseeingsname());
			andApp.setAddr(pictmp.stream().map(bp->bp.getPicsAddr()).collect(Collectors.toList()));
		//	pictmp.stream().forEach(ab->{andApp.setImgaddr(ab.getPicsAddr());});
			
			andApp.setImgaddr("www://");
			andApp.setTrip(globalc);
			andApp.setSight(a.getSightseeing().getSightseeingsname());
			tmp.add(andApp);
			
	
			
		});
		
		return tmp;

	}
	
/*	
	@GetMapping("/tst")
	public List<Object> get3pics() {
		return picRepository.findFrontPics(PageRequest.of(0, 3, Sort.by(...)));
	}*/
}
