package com.my.travel.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.my.travel.components.ToAndApp;
import com.my.travel.dao.CityRepository;
import com.my.travel.dao.PicRepository;
import com.my.travel.dao.TripSightseeingRepository;
import com.my.travel.model2.Pic;
import com.my.travel.model2.TripSightseeing;


@Controller
@RequestMapping(value = "/web/tripcity")
@SessionAttributes({ "imgcontent"} )

public class ViewController {
	
	
	@Autowired // Which is auto-generated by Spring, we will use it to handle the data
	private TripSightseeingRepository tripSightseeingRepository;
	
	@Autowired // Which is auto-generated by Spring, we will use it to handle the data
	private PicRepository picRepository;

	@Autowired // Which is auto-generated by Spring, we will use it to handle the data
	private CityRepository cityRepository;
	
	
	
	@RequestMapping(value = "/{id}")
	public String notesList(Model model,@PathVariable int id) {
		System.out.println("dvdfd3333u");
		List<ToAndApp> tmpp=getpics(id);
		model.addAttribute("imgcontent", tmpp);  
		model.addAttribute("listints", IntStream.rangeClosed(0, tmpp.size()-1)
			    .boxed().collect(Collectors.toList()));  

		return "cityxplorer2";//"tsts";
	}
	
	public List<ToAndApp> getpics(int id){
		//todo: recycle code
		System.out.println("  trippic in view	");
		List<TripSightseeing> tripSightseeings=tripSightseeingRepository.findAllByTripCityIdcities(id);
		String globalc=cityRepository.findById(id).get().getCityName();
		List<ToAndApp> tmp=new ArrayList<ToAndApp>();
		int i=0;
		tripSightseeings.forEach(a->{
			List<Pic> pictmp= picRepository.findAllBytripSightseeingIdtripSightseeingIn(a.getIdtripSightseeing());
			ToAndApp andApp=new ToAndApp();
			andApp.setSightname(a.getSightseeing().getSightseeingsname());
			andApp.setAddr(pictmp.stream().map(bp->bp.getPicsAddr()).collect(Collectors.toList()));
		//	pictmp.stream().forEach(ab->{andApp.setImgaddr(ab.getPicsAddr());});
			andApp.setImgaddr("www://");
			andApp.setTrip(globalc);
			andApp.setSight(a.getSightseeing().getSightseeingsname());
			tmp.add(andApp);
	
			
		});
		
		return tmp;

	}

}
